#ifndef NEUTON_MODEL_MODEL_H
#define NEUTON_MODEL_MODEL_H

#ifdef __cplusplus
extern "C"
{
#endif

/* Model info */
#define NEUTON_MODEL_HEADER_VERSION 3
#define NEUTON_MODEL_QLEVEL 32
#define NEUTON_MODEL_FLOAT_SUPPORT 1
#define NEUTON_MODEL_TASK_TYPE 0  // multiclass classification
#define NEUTON_MODEL_NEURONS_COUNT 37
#define NEUTON_MODEL_WEIGHTS_COUNT 245
#define NEUTON_MODEL_INPUTS_COUNT 108
#define NEUTON_MODEL_INPUTS_COUNT_ORIGINAL 12
#define NEUTON_MODEL_INPUT_LIMITS_COUNT 108
#define NEUTON_MODEL_OUTPUTS_COUNT 4
#define NEUTON_MODEL_LOG_SCALE_OUTPUTS 0
#define NEUTON_MODEL_HAS_CLASSES_RATIO 0
#define NEUTON_MODEL_HAS_NEGPOS_RATIO 0

/* Preprocessing */
#define NEUTON_PREPROCESSING_ENABLED 1
#define NEUTON_MODEL_WINDOW_SIZE 5
#define NEUTON_DROP_ORIGINAL_FEATURES 1
#define NEUTON_BITMASK_ENABLED 1
#define NEUTON_INPUTS_IS_INTEGER 0
#define NEUTON_MODEL_SA_PRECISION 24

/* Types */
typedef float input_t;
typedef float extracted_feature_t;
typedef float coeff_t;
typedef float weight_t;
typedef double acc_signed_t;
typedef double acc_unsigned_t;
typedef uint8_t sources_size_t;
typedef uint8_t weights_size_t;
typedef uint8_t neurons_size_t;

/* Scaling */
static const extracted_feature_t extractedFeaturesScaleMin[] = {
	307.60001, 307.60001, 307.60001, 0, 3, 0, 1.1542763, -1.5136726, -1.8453586,
	-175.44, -175.44, -175.44, 0, 3, 0, 1.1542763, -1.5068531, -1.8383868,
	-85.010002, -85.010002, -85.010002, 0, 3, 0, 1.1542763, -1.5068531, -1.8358688,
	-0.20999999, -0.1, -0.126, 0, 1, 0, 1.0502201, -1.5000033, -1.8333353,
	-0.5, -0.15000001, -0.244, 0, 1, 0, 1.0502201, -1.5000035, -1.8333346,
	-0.41, -0.079999998, -0.244, 0, 1, 0, 1.0502201, -1.5000025, -1.8333346,
	-6.77, -0.98000002, -2.54, 0, 1, 0, 1.0502201, -1.500001, -1.8333342, -8.9099998,
	-2.8699999, -4.4940004, 0, 1, 0, 1.0502201, -1.5000008, -1.8333373, -15.44,
	-1.53, -10.386, 0, 1, 0, 1.0502201, -1.5000006, -1.833334, 98575, 98575,
	98575, 0, 3, 0, 1.1542763, -1.5058509, -1.8367891, 36.52, 36.52, 36.52,
	0, 3, 0, 1.1542763, -1.5008581, -1.8338418, 22.290001, 22.290001, 22.290001,
	0, 3, 0, 1.1542763, -1.5008578, -1.8338418 };
static const extracted_feature_t extractedFeaturesScaleMax[] = {
	359.98001, 359.98001, 359.98001, 5.1480103, 4, 26.50201, 1.2084626, 1.5136726,
	0.2774272, -92.400002, -92.400002, -92.400002, 32.063824, 4, 1028.0887,
	1.2084626, 1.5114175, 0.27289176, -58.07, -58.07, -58.07, 0.46800232, 4,
	0.21902618, 1.2084626, 1.5068531, 0.26372671, 0.090000004, 0.23999999,
	0.10599999, 0.17045821, 4, 0.029056001, 1.2084626, 1.5000027, 0.25000763,
	0.16, 0.55000001, 0.33199999, 0.42621121, 4, 0.181656, 1.2084626, 1.5000025,
	0.25000715, 0.090000004, 0.40000001, 0.25200003, 0.35437831, 4, 0.12558399,
	1.2084626, 1.5000025, 0.2500062, 1.53, 5.6199999, 2.5760002, 4.5449953,
	4, 20.656984, 1.2084626, 1.500003, 0.25000501, 1.77, 13.06, 4.8220005,
	8.0698643, 4, 65.122704, 1.2084626, 1.5000045, 0.25000906, 2.5599999, 8.1199999,
	3.7960002, 5.9156299, 4, 34.994678, 1.2084626, 1.5000008, 0.25000167, 98669,
	98669, 98669, 4.8989797, 4, 24, 1.2084626, 1.5058509, 0.26171684, 60.209999,
	60.209999, 60.209999, 4.0906472, 4, 16.733395, 1.2084626, 1.5008581, 0.25171661,
	62.970001, 62.970001, 62.970001, 6.2021098, 4, 38.466167, 1.2084626, 1.5007628,
	0.25171709 };

/* Limits */
static const uint8_t modelUsedInputsMask[] = {
	0x75, 0x2e, 0xae, 0xfc, 0x70, 0xdb, 0x5f, 0xaf, 0xe4, 0x57, 0x1e, 0xbc,
	0xb8, 0x00 };

/* Structure */
static const weight_t modelWeights[] = {
	-0.061598852, -0.96529359, 0.88744348, 0, 0.76261854, 0.24927421, 0.26015562,
	-0.048202604, -0.83563477, 0.037327182, -0.97285771, 0.00041059023, 0.95703125,
	-0.71473634, -0.29756373, -0.18064477, 0.9510541, 0.96034205, 0.105413,
	-0.76811075, -0.34343255, -0.9624964, 0.27945888, 0.1185185, 1, -1, -0.45694125,
	-0.16719615, -0.32723621, 0.20262101, -0.46150899, 0.65537393, -0.63927078,
	0.67908621, -1, 0.08984419, -0.054135241, 0.7605781, 0.0011882633, -0.71698844,
	-0.96427453, 0.50000823, -0.11116159, 0.79001153, 0.091693431, -0.75, -1,
	0, 0.075694799, 1, -0.25, -1, 1, 0, 0.22880557, -0.89815652, -1, -0.12157735,
	0.54022598, -0.125, -0.87377, -1, -1, 0.22026786, 0.89262307, 0.95097953,
	-0.0625, -0.67855459, 0.56268442, 1, 0.63165283, 1, -0.375, -0.081039168,
	-1, 0.69023579, 0.82648599, 0.2777485, -0.22994573, -0.10497284, -1, 0.2671549,
	0.99456435, -0.0010344767, 0, -1, -0.7416153, -0.18171933, -0.27291805,
	0.26498061, 0.62041128, 0.018144393, -0.056396473, -0.74999994, 0.37694925,
	-0.12159693, -0.53804892, -0.19146122, -0.97725451, 0.72141266, 0.0049139024,
	-0.2775836, -1, 0.039271552, -1, -0.037190542, -1, 0.65576094, 0.50238401,
	-0.46880665, -0.093533725, -0.02347374, -0.86571443, 0.95312691, 0.069258869,
	-0.25839451, -0.24999999, -0.11084385, -1, 1, -0.43743747, 2.2649765e-06,
	-0.91410381, -0.084933981, -0.81250161, 1, 0.82700354, 0.0078048706, -0.059047174,
	-0.99999988, -0.054804437, 0.99999988, -0.83861864, 0.89356232, -0.43722332,
	-0.62485492, 0.25162184, 0.0021551251, 1, -0.25, 1, 0.083232857, -0.012254045,
	-0.99999994, 0.99999952, 0.14963457, -0.9898982, 0.84495544, 0.18762255,
	-0.32193497, -0.68955064, -0.99999988, 0.21388121, 0.46498829, 0.99614334,
	-0.27780825, 0.97846061, -0.55153251, 0.068555824, -0.82451016, 1, -0.75063598,
	0.99389648, -0.70448315, -0.54786867, 0.49888328, -0.98779726, 0.99658203,
	-0.25390625, -1, 1, -0.5, 1, -0.33479065, 1, 0.99951172, -0.3939454, 0.2727499,
	-0.74999332, 0.95759034, 0.62817156, -0.7840333, -0.89852351, -0.375, -0.93592834,
	0.46299854, -0.84378999, -0.30866855, -0.53978938, 0.79857779, 0.75971079,
	-0.1997758, -0.95831561, 0.28371456, -0.74788088, -0.49143076, 0.95763135,
	-0.10525282, -0.35949412, -0.99999928, 0.99985504, -0.3618679, -1, -0.33065465,
	-0.16162692, -0.21529742, -0.94298327, 0.20385277, -0.8866657, -0.99999994,
	1, -0.75905794, -0.82439393, 0.9999997, 1, 0.99999595, 0.99999952, 0.85227263,
	-0.19955112, 0.36237672, -0.70995808, 0.24738312, -0.99988937, 0.37624583,
	-0.87783152, 0.51964688, -1, 0.98827791, -0.32160807, -0.86606419, 0.53293383,
	-1, -1, 0.2510941, -1, -0.5207625, 0.17972372, -0.75815809, 0.22004238,
	-0.23340726, -0.83165354, 0.1244477, -0.26029372, -0.99999797, 0.51057583 };

static const sources_size_t modelLinks[] = {
	31, 38, 46, 50, 57, 66, 108, 0, 19, 78, 100, 103, 108, 2, 83, 92, 100,
	101, 108, 0, 2, 0, 72, 73, 108, 1, 2, 18, 81, 83, 90, 108, 4, 0, 36, 54,
	78, 100, 108, 0, 4, 5, 74, 83, 108, 2, 6, 21, 36, 82, 108, 2, 7, 108, 0,
	4, 7, 51, 95, 108, 0, 6, 2, 63, 99, 100, 108, 36, 47, 76, 90, 95, 108,
	6, 7, 9, 10, 36, 74, 108, 3, 4, 9, 13, 23, 100, 108, 0, 5, 10, 11, 37,
	48, 108, 5, 17, 31, 66, 101, 108, 18, 30, 49, 61, 93, 108, 7, 9, 30, 46,
	91, 108, 4, 13, 26, 58, 82, 108, 3, 18, 18, 108, 2, 12, 17, 90, 101, 108,
	11, 29, 40, 41, 56, 108, 0, 1, 2, 3, 20, 108, 7, 19, 6, 29, 37, 38, 90,
	92, 108, 0, 1, 2, 4, 22, 108, 40, 69, 71, 73, 81, 101, 108, 0, 1, 2, 3,
	0, 108, 3, 4, 9, 11, 13, 15, 17, 19, 26, 108, 4, 14, 4, 59, 90, 108, 11,
	13, 43, 44, 46, 108, 0, 1, 2, 3, 15, 108, 5, 28, 70, 82, 84, 108, 7, 23,
	31, 43, 73, 108, 0, 5, 22, 23, 30, 32, 108, 22, 28, 32, 27, 41, 99, 108,
	0, 1, 2, 3, 29, 52, 1, 6, 10, 12, 14, 16, 18, 20, 21, 24, 25, 28, 29, 31,
	34, 35, 108 };

static const weights_size_t modelIntLinksBoundaries[] = {
	0, 8, 13, 21, 26, 33, 41, 47, 53, 57, 62, 67, 77, 82, 89, 95, 100, 108,
	114, 120, 125, 128, 139, 142, 154, 155, 166, 177, 180, 184, 195, 197, 205,
	214, 218, 227, 244 };
static const weights_size_t modelExtLinksBoundaries[] = {
	7, 13, 19, 25, 32, 39, 45, 51, 54, 60, 67, 73, 80, 87, 94, 100, 106, 112,
	118, 122, 128, 134, 140, 149, 155, 162, 168, 178, 184, 190, 196, 202, 208,
	215, 222, 228, 245 };

static const coeff_t modelFuncCoeffs[] = {
	27.531252, 39.999985, 40, 39.999985, 39.999985, 36.728401, 23.434126, 39.990257,
	40, 37.506287, 40, 30.02499, 27.531252, 40, 30.024979, 15.685743, 40, 35.006836,
	20.361485, 40, 40, 39.999981, 40, 40, 39.999996, 39.999977, 20.050001,
	39.998779, 22.857719, 39.688305, 0.75925899, 20.049986, 30.024988, 40,
	39.999966, 40, 40 };
static const uint8_t modelFuncTypes[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

static const neurons_size_t modelOutputNeurons[] = { 33, 36, 8, 27 };

#ifdef __cplusplus
}
#endif

#endif // NEUTON_MODEL_MODEL_H

